/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.allamiibo;

import com.google.gson.Gson;
import java.awt.Image;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.InputStreamReader;
import java.io.Reader;
import java.nio.file.Files;
import java.nio.file.Paths;
import javax.swing.JOptionPane;

/**
 *
 * @author Edwar
 */
public class AmiiboCollection extends javax.swing.JFrame {
    private AllAmiibo allAmiiboWindow; //need to get AllAmiibo
    
    private ArrayList<Amiibo> collectionList;
    private DefaultListModel collectionModel;
    
    private Image image;
    
    /**
     * Creates new form InventoryDisplay
     */
    
    public AmiiboCollection(AllAmiibo display) {
        initComponents();
        
        allAmiiboWindow = display;
        collectionList = allAmiiboWindow.getCollectionList();
        collectionModel = allAmiiboWindow.getCollectionModel();
        
        collectionJList.setModel(collectionModel);
        
    }
    
    public void setAllAmiiboDisplay(AllAmiibo creator){
        allAmiiboWindow = creator;
    }
    
    public void setCollectionList(ArrayList<Amiibo> setter){
        collectionList = setter;
    }
    
    public void setCollectionModel(DefaultListModel setter){
        collectionModel = setter;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        collectionJList = new javax.swing.JList<>();
        removeAmiibo = new javax.swing.JButton();
        loadButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        amiiboPic = new javax.swing.JLabel();

        setTitle("Amiibo Collection");

        collectionJList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        collectionJList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                collectionJListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(collectionJList);

        removeAmiibo.setText("Remove from Collection");
        removeAmiibo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAmiiboActionPerformed(evt);
            }
        });

        loadButton.setText("Load Collection");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save Collection");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        amiiboPic.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loadButton)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(saveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                        .addComponent(removeAmiibo))
                    .addComponent(amiiboPic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                    .addComponent(amiiboPic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeAmiibo)
                    .addComponent(loadButton)
                    .addComponent(saveButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void collectionJListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_collectionJListValueChanged
        try{
                URL imgUrl = new URL(collectionList.get(collectionJList.getSelectedIndex()).getImage());
                image = ImageIO.read(imgUrl);
                ImageIcon labelIcon = new ImageIcon(image);
                amiiboPic.setIcon(labelIcon);
            } catch (IOException e){
                System.out.println("Error getting image");
            } catch (IndexOutOfBoundsException e){
            }
    }//GEN-LAST:event_collectionJListValueChanged

    private void removeAmiiboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeAmiiboActionPerformed
        // TODO add your handling code here:
        int removeIndex = collectionJList.getSelectedIndex();
        System.out.println(removeIndex);
        
        collectionModel.remove(removeIndex);
        collectionList.remove(removeIndex);
        collectionJList.remove(removeIndex);
        
        collectionJList.setSelectedIndex(0);
        
        //keep getting ArayIndexOutOfBoundsException: Array index out of range when running, unsure why this may be happening because everything else works
    }//GEN-LAST:event_removeAmiiboActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        Gson gson = new Gson();
        
        try{
            
            FileWriter fw = new FileWriter("model.json");
            fw.write("{\"amiibo\":"); //change
            gson.toJson(collectionList, fw);
            /*
            https://stackoverflow.com/questions/45995067/writer-not-working-for-json-file-using-gson-json-file-is-blank-after-code-execu
            */
            fw.write("}"); //change and then will be fully functional
            fw.close();
        } catch (IOException e){
            System.out.println("mid");
        }
            
        JOptionPane.showMessageDialog(null, "Collection saved (Under file 'model.json')!");  
    }//GEN-LAST:event_saveButtonActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        // TODO add your handling code here:
        Gson gson = new Gson();
        
        /*
        https://attacomsian.com/blog/gson-read-json-file
        */
        
        try{
        
            Reader reader = Files.newBufferedReader(Paths.get("model.json"));

            AmiiboList loadList = gson.fromJson(reader, AmiiboList.class); //said to be root of error, expected BEGIN_Object but was string at line

            collectionList = loadList.getAmiiboList();
            
            collectionModel.clear();

            for(Amiibo amiibo : collectionList){
                collectionModel.addElement(amiibo.getName());
            }

            collectionJList.setModel(collectionModel);
        } catch (IOException e){}
    }//GEN-LAST:event_loadButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AmiiboCollection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AmiiboCollection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AmiiboCollection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AmiiboCollection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        //java.awt.EventQueue.invokeLater(new Runnable() {
            //public void run() {
              //  new InventoryDisplay().setVisible(true);
            //}
        //});
        //</editor-fold>

        /* Create and display the form */
        //java.awt.EventQueue.invokeLater(new Runnable() {
            //public void run() {
              //  new InventoryAmiibo().setVisible(true);
            //}
        //});
        //</editor-fold>

        /* Create and display the form */
        //java.awt.EventQueue.invokeLater(new Runnable() {
            //public void run() {
              //  new InventoryDisplay().setVisible(true);
            //}
        //});
        //</editor-fold>

        /* Create and display the form */
        //java.awt.EventQueue.invokeLater(new Runnable() {
            //public void run() {
              //  new AmiiboCollection().setVisible(true);
            //}
        //});
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel amiiboPic;
    private javax.swing.JList<String> collectionJList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loadButton;
    private javax.swing.JButton removeAmiibo;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
